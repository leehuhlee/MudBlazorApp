@inject IProductService ProductService
@inject IBrandService BrandService

<EditForm Model="Product" OnValidSubmit="Save">
	<FluentValidationValidator @ref="_fluentValidationValidator" />
	<MudDialog>
		<TitleContent>
			@{
				if (Product.Id == 0)
				{
					<MudText Typo="Typo.h6">
						<MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1" />
						Add Product
					</MudText>
				}
				else
				{
					<MudText Typo="Typo.h6">
						<MudIcon Icon="@Icons.Material.Filled.Update" Class="mr-3 mb-n1" />
						Update Product
					</MudText>
				}
			}
		</TitleContent>
		<DialogContent>
			@if (Product.Id != 0)
			{
				<MudTextField Disabled For="@(() => Product.Id)" @bind-Value="Product.Id" Label="Id" />
			}
			<MudTextField T="string" For="@(() => Product.Name)" @bind-Value="Product.Name" Label="Name" />
			<MudTextField For="@(() => Product.Description)" @bind-Value="Product.Description" Label="Description" />
			<MudSelect T="int" Label="Brands" @bind-Value="Product.BrandId" @bind-Text="brandName">
			@foreach (var brand in brandList)
			{
				<MudSelectItem T="int" Value="@brand.Id">@brand.Name</MudSelectItem>
			}
			</MudSelect>
		</DialogContent>
		<DialogActions>
			<MudButton DisableElevation Variant="Variant.Filled" OnClick="Cancel">Cancel</MudButton>
			@if (Product.Id != 0)
			{
				<MudButton DisableElevation Variant="Variant.Filled" ButtonType="ButtonType.Submit" Color="Color.Secondary">Update</MudButton>
			}
			else
			{
				<MudButton DisableElevation Variant="Variant.Filled" ButtonType="ButtonType.Submit" Color="Color.Success">Save</MudButton>
			}
		</DialogActions>
	</MudDialog>
</EditForm>